@model BryantUniversity.ViewModels.CourseViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
<link rel="stylesheet" type="text/css" href="~/styles/scrollablemenu.css" />

<div class="container">
    <div class="row">
        <div class="col-sm">

            @using (Html.BeginForm("Edit", "Courses", FormMethod.Post, new { @class = "pure-form pure-form-aligned" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary()
                <fieldset>
                    <div id ="getCourseId"data-courseId="@Model.Id">

                    </div>

                    <div class="pure-control-group">
                        @Html.LabelFor(model => model.CourseTitle)
                        @Html.EditorFor(model => model.CourseTitle)
                        @Html.ValidationMessageFor(model => model.CourseTitle, "", new { @class = "pure-form-message-inline" })
                    </div>

                    <div class="pure-control-group">
                        @Html.LabelFor(model => model.Description)
                        @Html.EditorFor(model => model.Description)
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "pure-form-message-inline" })
                    </div>

                    <div class="pure-controls">
                        @Html.LabelFor(model => model.Credits)
                        @Html.EditorFor(model => model.Credits)
                        @Html.ValidationMessageFor(model => model.Credits, "", new { @class = "pure-form-message-inline" })
                    </div>
                    <div class="pure-controls">
                        @Html.LabelFor(model => model.Level)
                        @Html.EditorFor(model => model.Level) Is active
                        @Html.ValidationMessageFor(model => model.Level, "", new { @class = "pure-form-message-inline" })
                    </div>
                    <div class="pure-controls">
                        @Html.ActionLink("Cancel", "Index", new { }, new { @class = "pure-button" })
                        <button type="submit" class="pure-button pure-button-primary">Submit</button>
                    </div>
                </fieldset>
            }
        </div>
        <div id ="tableContainer"class="col-sm">
            <table id="TeachersTable" class="table table-striped table-bordered table-sm " cellspacing="0"
                   width="100%">
                <thead>
                    <tr>
                        <th class="th-sm">ID</th>
                        <th class="th-sm">Name</th>          
                        <th class="th-sm">E-mail</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                    </tr>
                    <tr>
 
                    </tr>
                    <tr>
                        
                    </tr>
                    <tr>
                        
                    </tr>
                    <tr>
                       
                    </tr>
                    <tr>
            
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="col-sm">
            One of three columns
        </div>
    </div>
</div>

<script src="~/scripts/course.js"></script>
